{"version":3,"file":"app.js","names":["isLogEnabled","config","App","constructor","sources","serverConfig","parser","SourcesParser","apiUrl","getApiUrl","app","express","console","log","yellow","initMiddleware","initControlApi","initRecordingApi","initMocks","use","bodyParser","text","json","apiRecorder","initLogger","initCors","cors","origin","router","SourcesRouter","registerSources","morgan","controlApi","recordingApi","initWebSocketApi","wsServer","websocketApi","controlApiUrl","start","port","callback","listen"],"sources":["../lib/app.js"],"sourcesContent":["import express from 'express';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport config from './config';\nimport { controlApi } from './api/control';\nimport { SourcesParser } from './core/sources-parser';\nimport { SourcesRouter } from './core/sources-router';\nimport { recordingApi } from './api/recording';\nimport { apiRecorder } from './api/recording/api-recorder';\nimport { websocketApi } from './api/websocket';\nimport cors from 'cors';\n\nconst { isLogEnabled } = config;\n\nexport class App {\n  constructor(sources, serverConfig) {\n    this.parser = new SourcesParser(sources);\n    this.apiUrl = this.getApiUrl(serverConfig);\n    this.app = express();\n\n    console.log('******* CONFIG **********'.yellow);\n\n    this.initMiddleware();\n    this.initControlApi();\n    this.initRecordingApi();\n    this.initMocks();\n  }\n\n  initMiddleware() {\n    this.app.use(bodyParser.text());\n    this.app.use(bodyParser.json());\n    this.app.use(apiRecorder(this.apiUrl));\n    this.initLogger();\n  }\n\n  initCors() {\n    this.app.use(cors({ origin: '*' }));\n  }\n\n  initMocks() {\n    const router = new SourcesRouter(this.parser);\n    router.registerSources(this.app, isLogEnabled);\n  }\n\n  /**\n   *  Method to start logger of requests\n   *    Actual format\n   *      0.230 ms GET 200 /some/url/\n   *    More option\n   *      https://github.com/expressjs/morgan\n   */\n  initLogger() {\n    if (isLogEnabled) {\n      this.app.use(morgan(':response-time ms :method :status :url'));\n    }\n  }\n\n  initControlApi() {\n    this.app.use(this.apiUrl, controlApi(this.parser));\n  }\n\n  initRecordingApi() {\n    this.app.use(this.apiUrl, recordingApi());\n  }\n\n  initWebSocketApi(wsServer) {\n    this.app.use(this.apiUrl, websocketApi(wsServer));\n  }\n\n  getApiUrl({ controlApiUrl } = {}) {\n    return controlApiUrl ? controlApiUrl : '/api/v1';\n  }\n\n  start(port, callback) {\n    return this.app.listen(port, callback);\n  }\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAM;EAAEA;AAAF,IAAmBC,eAAzB;;AAEO,MAAMC,GAAN,CAAU;EACfC,WAAW,CAACC,OAAD,EAAUC,YAAV,EAAwB;IACjC,KAAKC,MAAL,GAAc,IAAIC,4BAAJ,CAAkBH,OAAlB,CAAd;IACA,KAAKI,MAAL,GAAc,KAAKC,SAAL,CAAeJ,YAAf,CAAd;IACA,KAAKK,GAAL,GAAW,IAAAC,gBAAA,GAAX;IAEAC,OAAO,CAACC,GAAR,CAAY,4BAA4BC,MAAxC;IAEA,KAAKC,cAAL;IACA,KAAKC,cAAL;IACA,KAAKC,gBAAL;IACA,KAAKC,SAAL;EACD;;EAEDH,cAAc,GAAG;IACf,KAAKL,GAAL,CAASS,GAAT,CAAaC,mBAAA,CAAWC,IAAX,EAAb;IACA,KAAKX,GAAL,CAASS,GAAT,CAAaC,mBAAA,CAAWE,IAAX,EAAb;IACA,KAAKZ,GAAL,CAASS,GAAT,CAAa,IAAAI,wBAAA,EAAY,KAAKf,MAAjB,CAAb;IACA,KAAKgB,UAAL;EACD;;EAEDC,QAAQ,GAAG;IACT,KAAKf,GAAL,CAASS,GAAT,CAAa,IAAAO,aAAA,EAAK;MAAEC,MAAM,EAAE;IAAV,CAAL,CAAb;EACD;;EAEDT,SAAS,GAAG;IACV,MAAMU,MAAM,GAAG,IAAIC,4BAAJ,CAAkB,KAAKvB,MAAvB,CAAf;IACAsB,MAAM,CAACE,eAAP,CAAuB,KAAKpB,GAA5B,EAAiCV,YAAjC;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEwB,UAAU,GAAG;IACX,IAAIxB,YAAJ,EAAkB;MAChB,KAAKU,GAAL,CAASS,GAAT,CAAa,IAAAY,eAAA,EAAO,wCAAP,CAAb;IACD;EACF;;EAEDf,cAAc,GAAG;IACf,KAAKN,GAAL,CAASS,GAAT,CAAa,KAAKX,MAAlB,EAA0B,IAAAwB,mBAAA,EAAW,KAAK1B,MAAhB,CAA1B;EACD;;EAEDW,gBAAgB,GAAG;IACjB,KAAKP,GAAL,CAASS,GAAT,CAAa,KAAKX,MAAlB,EAA0B,IAAAyB,uBAAA,GAA1B;EACD;;EAEDC,gBAAgB,CAACC,QAAD,EAAW;IACzB,KAAKzB,GAAL,CAASS,GAAT,CAAa,KAAKX,MAAlB,EAA0B,IAAA4B,uBAAA,EAAaD,QAAb,CAA1B;EACD;;EAED1B,SAAS,CAAC;IAAE4B;EAAF,IAAoB,EAArB,EAAyB;IAChC,OAAOA,aAAa,GAAGA,aAAH,GAAmB,SAAvC;EACD;;EAEDC,KAAK,CAACC,IAAD,EAAOC,QAAP,EAAiB;IACpB,OAAO,KAAK9B,GAAL,CAAS+B,MAAT,CAAgBF,IAAhB,EAAsBC,QAAtB,CAAP;EACD;;AA7Dc"}
{"version":3,"file":"query-string-matcher.js","names":["TYPE_SPECIFIC_REGEX","isEqualQueryParamValues","masterValues","slaveValues","Array","isArray","length","sort","join","getMatchingResultByQueryStrings","masterQS","slaveQS","isMasterExist","JSON","stringify","isSlaveExist","MATCH_STRICT","MATCH_NO","MATCH_DEFAULT","result","countOfMatches","countOfMatchesUnspecific","forEach","name","values","type","isContained","indexOf","isSpecific","REG_ALL","value","regex","RegExp","test","masterQSLength","Object","keys","slaveQSLength","MatchingResult","MATCH_TYPE","SUBSET","getMatchesByQueryString","req","definitions","matches","record","query","queryStringParameters","isNo","push","MatchItem"],"sources":["../../../lib/core/matchers/query-string-matcher.js"],"sourcesContent":["import MatchItem from './MatchItem';\nimport { REG_ALL } from '../../constants';\nimport MatchingResult, {\n  MATCH_DEFAULT,\n  MATCH_NO,\n  MATCH_STRICT,\n  MATCH_TYPE,\n} from './MatchingResult';\n\nconst TYPE_SPECIFIC_REGEX = 'SPECIFIC_REGEX';\n\nconst isEqualQueryParamValues = (masterValues, slaveValues) => {\n  if (!Array.isArray(masterValues) || !Array.isArray(slaveValues)) {\n    return false;\n  }\n\n  if (masterValues.length <= 1 || slaveValues.length <= 1) {\n    return false;\n  }\n\n  return [...masterValues].sort().join('') === [...slaveValues].sort().join('');\n};\n\n/**\n *                  exist     dont      exist     dont\n *  req/master        0         1         0         1\n *  bundle/slave      0         0         1         1\n *  result =          strict    default   no        subset/no\n *\n *  @param {Object} masterQS          request\n *  @param {Array.<Object>} slaveQS   bundle\n */\nexport const getMatchingResultByQueryStrings = (masterQS, slaveQS) => {\n  let isMasterExist = !!masterQS && JSON.stringify(masterQS) !== '{}';\n  let isSlaveExist = !!slaveQS;\n  // console.log('+++++++++++'.green);\n  // console.log(masterQS);\n  // console.log(slaveQS);\n  // console.log('+++++++++++'.blue);\n  if (!isMasterExist && !isSlaveExist) return MATCH_STRICT;\n  if (!isMasterExist && isSlaveExist) return MATCH_NO;\n  if (isMasterExist && !isSlaveExist) return MATCH_DEFAULT;\n  let result = null;\n  let countOfMatches = 0;\n  let countOfMatchesUnspecific = 0;\n  slaveQS.forEach(({ name, values, type }) => {\n    if (!masterQS[name]) {\n      result = MATCH_NO;\n    } else {\n      let isContained = values.indexOf(masterQS[name]) !== -1;\n\n      let isSpecific = values.indexOf(REG_ALL) === -1;\n      if (type === TYPE_SPECIFIC_REGEX) {\n        isSpecific = true;\n        if (!isContained) {\n          values.forEach((value) => {\n            let regex = new RegExp(value);\n\n            // console.log(name);\n            // console.log(regex);\n            // console.log(masterQS[name]);\n            // console.log('regex.test(masterQS[name]) ' +regex.test(masterQS[name]));\n            if (regex.test(masterQS[name])) {\n              isSpecific = false;\n            }\n          });\n        }\n      }\n\n      if (isSpecific && !isContained) {\n        if (isEqualQueryParamValues(masterQS[name], values)) {\n          countOfMatches++;\n        } else {\n          result = MATCH_NO;\n        }\n      } else {\n        if (!isSpecific) countOfMatchesUnspecific++;\n        countOfMatches++;\n      }\n    }\n  });\n\n  if (result !== null) return result;\n\n  let masterQSLength = Object.keys(masterQS).length;\n  let slaveQSLength = slaveQS.length;\n\n  if (slaveQSLength === countOfMatches && countOfMatches === masterQSLength)\n    return MATCH_STRICT;\n  return new MatchingResult(\n    MATCH_TYPE.SUBSET,\n    countOfMatches,\n    countOfMatchesUnspecific\n  );\n};\n\nexport const getMatchesByQueryString = (req, definitions) => {\n  let matches = [];\n  definitions.forEach((record) => {\n    // console.log(req.query);\n    // console.log(record.queryStringParameters);\n    let result = getMatchingResultByQueryStrings(\n      req.query,\n      record.queryStringParameters\n    );\n    // console.log('result');\n    // console.log(result);\n    if (!result.isNo()) {\n      matches.push(new MatchItem(record, result));\n    }\n  });\n  return matches;\n};\n"],"mappings":"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"}
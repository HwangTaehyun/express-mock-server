{"version":3,"file":"sources-parser.js","names":["isLogEnabled","config","Record","constructor","record","__record","queryStringParameters","request","body","response","SourcesParser","sources","generateMapFromSources","getMap","map","resetMap","GENERATE_TITLE","console","time","forEach","source","setSource","sortMap","timeEnd","setRecord","switchRecord","SET_NEW_REC","method","path","isChanged","changedRecord","index","isQueryStringEqual","JSON","stringify","push","Object","keys","pathItem","gets","methods","GET","sort","compare","posts","POST","puts","PUT","deletes","DELETE","patches","PATCH","qs1","qs2","length","isEqual","qs1ref","qs2ref","item","name","values","qs2Values","value","indexOf","a","b","aSpecificCount","bSpecificCount","qs","REG_ALL"],"sources":["../../lib/core/sources-parser.js"],"sourcesContent":["import { methods, REG_ALL } from './../constants';\nimport config from './../config';\n\nconst { isLogEnabled } = config;\n\nclass Record {\n  constructor(record) {\n    this.__record = record;\n    this.queryStringParameters = record.request.queryStringParameters;\n    this.body = record.request.body;\n    this.response = record.response;\n  }\n}\n\n/**\n *  Class for handling sources\n */\nexport class SourcesParser {\n  constructor(sources) {\n    this.sources = sources;\n    this.generateMapFromSources(sources);\n  }\n\n  /**\n   *  @public\n   *  @return {!Object}\n   */\n  getMap() {\n    return this.map;\n  }\n\n  /**\n   *  @public\n   */\n  resetMap() {\n    this.generateMapFromSources(this.sources);\n  }\n\n  /**\n   *  Method to initialize sources to map\n   *  @param {Object} sources\n   */\n  generateMapFromSources(sources) {\n    const GENERATE_TITLE = 'Generate original map from sources';\n    if (isLogEnabled) {\n      console.time(GENERATE_TITLE);\n    }\n\n    this.map = {};\n    sources.forEach((source) => {\n      this.setSource(this.map, source);\n    });\n    this.sortMap();\n\n    if (isLogEnabled) {\n      console.timeEnd(GENERATE_TITLE);\n    }\n  }\n\n  /**\n   *\n   */\n  setSource(map, source) {\n    source.forEach((record) => {\n      this.setRecord(map, record);\n    });\n  }\n\n  /**\n   *\n   */\n  switchRecord(record) {\n    const SET_NEW_REC = 'Set new record';\n    if (isLogEnabled) console.time(SET_NEW_REC);\n    let { method, path, queryStringParameters, body } = record.request;\n    let isChanged = false;\n    this.map[path][method].forEach((changedRecord, index) => {\n      // console.log('**************'.blue);\n      // console.log(JSON.stringify(body));\n      // console.log(JSON.stringify(changedRecord.body));\n      // console.log(JSON.stringify(body) == JSON.stringify(changedRecord.body));\n      if (\n        isQueryStringEqual(\n          queryStringParameters,\n          changedRecord.queryStringParameters\n        ) &&\n        JSON.stringify(body) === JSON.stringify(changedRecord.body)\n      ) {\n        // console.log('CHANGE FROM '.green);\n        // console.log(JSON.stringify(this.map[path][method][index], null, \"  \"));\n        this.map[path][method][index] = new Record(record);\n        // console.log('CHANGE TO '.blue);\n        // console.log(JSON.stringify(this.map[path][method][index], null, \"  \"));\n        isChanged = true;\n      }\n    });\n    if (!isChanged) {\n      this.setRecord(this.map, record);\n    }\n    this.sortMap();\n    if (isLogEnabled) console.timeEnd(SET_NEW_REC);\n  }\n\n  /**\n   *\n   */\n  setRecord(map, record) {\n    let { method, path } = record.request;\n    if (!map[path]) map[path] = {};\n    if (!map[path][method]) map[path][method] = [];\n    map[path][method].push(new Record(record));\n  }\n\n  /**\n   *  Method to sort map\n   */\n  sortMap() {\n    Object.keys(this.map).forEach((path) => {\n      let pathItem = this.map[path];\n      let gets = pathItem[methods.GET];\n      if (gets) {\n        gets.sort(compare);\n      }\n      let posts = pathItem[methods.POST];\n      if (posts) {\n        posts.sort(compare);\n      }\n      let puts = pathItem[methods.PUT];\n      if (puts) {\n        puts.sort(compare);\n      }\n      let deletes = pathItem[methods.DELETE];\n      if (deletes) {\n        deletes.sort(compare);\n      }\n      let patches = pathItem[methods.PATCH];\n      if (patches) {\n        patches.sort(compare);\n      }\n    });\n  }\n}\n\n/**\n * TODO: refactoring\n */\nfunction isQueryStringEqual(qs1, qs2) {\n  if ((qs1 && !qs2) || (!qs1 && qs2)) return false;\n  if (!qs1 && !qs2) return true;\n  if (qs1.length !== qs2.length) return false;\n  let isEqual = true;\n  let qs1ref = {};\n  let qs2ref = {};\n\n  qs1.forEach((item) => {\n    qs1ref[item['name']] = item['values'];\n  });\n\n  qs2.forEach((item) => {\n    qs2ref[item['name']] = item['values'];\n  });\n\n  Object.keys(qs1ref).forEach((name) => {\n    let values = qs1ref[name];\n    let qs2Values = qs2ref[name];\n    if (qs2Values.length != values.length) {\n      isEqual = false;\n    } else {\n      values.forEach((value) => {\n        if (qs2Values.indexOf(value) === -1) {\n          isEqual = false;\n        }\n      });\n    }\n  });\n  return isEqual;\n}\n\n/**\n *  Method to compare two requests for sorting by params count\n */\nfunction compare(a, b) {\n  if (!a.queryStringParameters && !b.queryStringParameters) return 0;\n  if (!a.queryStringParameters) return 1;\n  if (!b.queryStringParameters) return -1;\n  if (b.queryStringParameters.length != a.queryStringParameters.length)\n    return b.queryStringParameters.length - a.queryStringParameters.length;\n\n  // toto posledni pravidlo je kvuli obecnemu parametru, aby prevazili konkretni nad obecnym.   2 > .*\n  let aSpecificCount = 0;\n  let bSpecificCount = 0;\n  a.queryStringParameters.forEach((qs, index) => {\n    if (qs['values'].indexOf(REG_ALL) !== -1) aSpecificCount++;\n  });\n  b.queryStringParameters.forEach((qs) => {\n    if (qs['values'].indexOf(REG_ALL) !== -1) bSpecificCount++;\n  });\n  return aSpecificCount - bSpecificCount;\n}\n"],"mappings":"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"}
{"version":3,"file":"sources-parser.spec.js","names":["describe","it","sources","request","method","path","response","statusCode","body","JSON","stringify","key","parser","SourcesParser","assert","equal","Object","keys","map","length"],"sources":["../../lib/core/sources-parser.spec.js"],"sourcesContent":["import { SourcesParser } from './sources-parser';\nimport assert from 'assert';\n\ndescribe('source-parser', () => {\n  it('should parse source', () => {\n    // given\n    const sources = [\n      [\n        {\n          request: {\n            method: 'GET',\n            path: '/api/test',\n          },\n          response: {\n            statusCode: 200,\n            body: JSON.stringify({\n              key: 'value',\n            }),\n          },\n        },\n      ],\n    ];\n\n    // when\n    const parser = new SourcesParser(sources);\n\n    // then\n    assert.equal(Object.keys(parser.map).length, 1);\n    assert.equal(Object.keys(parser.map)[0], '/api/test');\n  });\n});\n"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;EAC9BC,EAAE,CAAC,qBAAD,EAAwB,MAAM;IAC9B;IACA,MAAMC,OAAO,GAAG,CACd,CACE;MACEC,OAAO,EAAE;QACPC,MAAM,EAAE,KADD;QAEPC,IAAI,EAAE;MAFC,CADX;MAKEC,QAAQ,EAAE;QACRC,UAAU,EAAE,GADJ;QAERC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,GAAG,EAAE;QADc,CAAf;MAFE;IALZ,CADF,CADc,CAAhB,CAF8B,CAmB9B;;IACA,MAAMC,MAAM,GAAG,IAAIC,4BAAJ,CAAkBX,OAAlB,CAAf,CApB8B,CAsB9B;;IACAY,eAAA,CAAOC,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,GAAnB,EAAwBC,MAArC,EAA6C,CAA7C;;IACAL,eAAA,CAAOC,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,GAAnB,EAAwB,CAAxB,CAAb,EAAyC,WAAzC;EACD,CAzBC,CAAF;AA0BD,CA3BO,CAAR"}